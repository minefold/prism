#!/usr/bin/env ruby
require 'bundler/setup'
Bundler.require :default, :backup

$:.unshift File.join File.dirname(__FILE__), '../lib'
require 'environment'
require 'timeout'

abort "Usage: start-vm world_name" unless ARGV.length == 1
world_name = ARGV.shift

# create a connection
connection = Fog::Compute.new({
  :provider                 => 'AWS',
  :aws_secret_access_key    => ENV['EC2_SECRET_KEY'],
  :aws_access_key_id        => ENV['EC2_ACCESS_KEY']
})

puts "Starting vm"
server = connection.servers.bootstrap(
  :private_key_path => '~/.ssh/minefold-dave.pem', 
  # :public_key_path => '~/.ssh/id_rsa.pub', 
  :username => 'ubuntu',
  :image_id => 'ami-8ca358e5',
  :groups => %W{default proxy},
  :key_name => 'minefold-dave',
  :flavor_id => 'm1.large'
)

server.wait_for { ready? }

puts "Bootstrapping"
bootstrap_commands = [
  "cd ~/minefold", 
  "GIT_SSH=~/deploy-ssh-wrapper git pull origin master",
  "bundle",
  "god -c ~/minefold/worker/config/worker.god"
]

server.ssh bootstrap_commands.join(" && ")

worker_url = "http://#{server.public_ip_address}:3000"

Timeout::timeout(20) do
  begin
    `curl -s #{worker_url}`
  end while $?.exitstatus != 0
end

puts "#{server.id} started at #{worker_url}"

puts "Starting world #{world_name}"
puts `curl -L #{worker_url}/worlds/create?id=#{world_name}`

