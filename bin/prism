#!/usr/bin/env ruby
# encoding: UTF-8
require 'bundler/setup'
Bundler.require :default

$:.unshift File.join File.dirname(__FILE__), '../lib'
require 'minefold'
require 'prism/front'

STDOUT.sync = true
EM.epoll

module Prism
  class << self
    attr_reader :id
  end

  EM.run do

    log = Prism::Logger.new
    @id = ARGV.shift || `hostname`.strip

    redis = Prism.redis
    Prism.redis.prism_id = Prism.id

    EM.error_handler do |e|
      Exceptional.handle(e)
      raise e
    end

    subscription = PrismRedis.connect
    subscription.psubscribe "players:*"
    subscription.psubscribe "players:disconnect:*"
    subscription.psubscribe "players:authenticate:*"
    subscription.on :pmessage do |key, channel, message|
      Prism::Messaging.deliver_message channel, message
    end

    redis.del("players:playing") do
      EM.start_server '0.0.0.0', 25565, Client
      log.info event:'started', id: Prism.id
    end

    # EM.add_periodic_timer(1) { puts EM.connection_count }
  end
end

