#!/usr/bin/env ruby
# encoding: UTF-8
require 'bundler/setup'
Bundler.require :default, :proxy

$:.unshift File.join File.dirname(__FILE__), '../lib'
require 'minefold'
require 'prism/back'

STDOUT.sync = true
EM.epoll

module Prism
  EM.run do
    
    subscription = PrismRedis.connect
    subscription.psubscribe "worlds:requests:*"
    subscription.psubscribe "workers:requests:*"
    subscription.on :pmessage do |key, channel, message|
      puts " â€¢ [#{channel}] #{message}"
      Prism::Messaging.deliver_message channel, message
    end

    [ PlayerConnectionRequest, 
      PlayerDisconnectionEvent, 
      PlayerMinutePlayedEvent, 
      PlayerWorldRequest, 
      WorkerStopRequest, 
      WorkerFixRequest, 
      WorkerCreateRequest].each do |klass|
        QueueProcessor.new klass
    end
    
    puts "Started. #{Fold.env} mode"
    
  end
end